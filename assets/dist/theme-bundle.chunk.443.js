"use strict";(self.webpackChunkWebpackChiara=self.webpackChunkWebpackChiara||[]).push([[443],{42443:(t,e,i)=>{i.r(e),i.d(e,{default:()=>h});var n=i(42066),r=i(50469),o=i(54587),a=i(28426),c=i(99706),s=i(22609),u=i(55825);function l(t,e){return l=Object.setPrototypeOf||function(t,e){return t.__proto__=e,t},l(t,e)}var h=function(t){var e,r;function h(e){var i;return(i=t.call(this,e)||this).validationDictionary=(0,c.M)(e),i}r=t,(e=h).prototype=Object.create(r.prototype),e.prototype.constructor=e,l(e,r);var d=h.prototype;return d.onReady=function(){(0,o.Z)(this.context.urls),u("#facetedSearch").length>0?this.initFacetedSearch():(this.onSortBySubmit=this.onSortBySubmit.bind(this),n.PT.on("sortBy-submitted",this.onSortBySubmit)),this.initInfiniteScroll(),(0,s.q)()},d.initInfiniteScroll=function(){var t=this;this.context.themeSettings.categorypage_infiniteScroll&&i.e(795).then(i.bind(i,80795)).then((function(e){return e.initCategoryPage(t.context)}))},d.initFacetedSearch=function(){var t=this.validationDictionary,e=t.price_min_evaluation,i=t.price_max_evaluation,n=t.price_min_not_entered,r=t.price_max_not_entered,o=t.price_invalid_value,c=u("#product-listing-container"),s=u("#faceted-search-container"),l={config:{category:{shop_by_price:!0,products:{limit:this.context.categoryProductsPerPage}}},template:{productListing:"category/product-listing",sidebar:"category/sidebar"},showMore:"category/show-more"};this.facetedSearch=new a.Z(l,(function(t){c.html(t.productListing),s.html(t.sidebar),u("html, body").animate({scrollTop:0},100)}),{validationErrorMessages:{onMinPriceError:e,onMaxPriceError:i,minPriceNotEntered:n,maxPriceNotEntered:r,onInvalidPrice:o},context:this.context})},h}(r.Z)},99706:(t,e,i)=>{i.d(e,{M:()=>o});var n="translations",r=function(t){return!!Object.keys(t[n]).length},o=function(t){var e=function(){for(var t=0;t<arguments.length;t++){var e=JSON.parse(t<0||arguments.length<=t?void 0:arguments[t]);if(r(e))return e}}(t.validationDictionaryJSON,t.validationFallbackDictionaryJSON,t.validationDefaultDictionaryJSON),i=Object.values(e[n]);return Object.keys(e[n]).map((function(t){return t.split(".").pop()})).reduce((function(t,e,n){return t[e]=i[n],t}),{})}}}]);