"use strict";(self.webpackChunkWebpackChiara=self.webpackChunkWebpackChiara||[]).push([[634],{61634:(t,n,i)=>{i.r(n),i.d(n,{default:()=>l});var e=i(42066),r=i(50469),o=i(54587),a=i(28426),c=i(99706),s=i(22609),u=i(55825);function d(t,n){return d=Object.setPrototypeOf||function(t,n){return t.__proto__=n,t},d(t,n)}var l=function(t){var n,r;function l(n){var i;return(i=t.call(this,n)||this).validationDictionary=(0,c.M)(n),i}r=t,(n=l).prototype=Object.create(r.prototype),n.prototype.constructor=n,d(n,r);var h=l.prototype;return h.onReady=function(){(0,o.Z)(this.context.urls),u("#facetedSearch").length>0?this.initFacetedSearch():(this.onSortBySubmit=this.onSortBySubmit.bind(this),e.PT.on("sortBy-submitted",this.onSortBySubmit)),this.initInfiniteScroll(),(0,s.q)()},h.initInfiniteScroll=function(){var t=this;this.context.themeSettings.brandpage_infiniteScroll&&i.e(795).then(i.bind(i,80795)).then((function(n){return n.initBrandPage(t.context)}))},h.initFacetedSearch=function(){var t=this.validationDictionary,n=t.price_min_evaluation,i=t.price_max_evaluation,e=t.price_min_not_entered,r=t.price_max_not_entered,o=t.price_invalid_value,c=u("#product-listing-container"),s=u("#faceted-search-container"),d={template:{productListing:"brand/product-listing",sidebar:"brand/sidebar"},config:{shop_by_brand:!0,brand:{products:{limit:this.context.brandProductsPerPage}}},showMore:"brand/show-more"};this.facetedSearch=new a.Z(d,(function(t){c.html(t.productListing),s.html(t.sidebar),u("html, body").animate({scrollTop:0},100)}),{validationErrorMessages:{onMinPriceError:n,onMaxPriceError:i,minPriceNotEntered:e,maxPriceNotEntered:r,onInvalidPrice:o},context:this.context})},l}(r.Z)},99706:(t,n,i)=>{i.d(n,{M:()=>o});var e="translations",r=function(t){return!!Object.keys(t[e]).length},o=function(t){var n=function(){for(var t=0;t<arguments.length;t++){var n=JSON.parse(t<0||arguments.length<=t?void 0:arguments[t]);if(r(n))return n}}(t.validationDictionaryJSON,t.validationFallbackDictionaryJSON,t.validationDefaultDictionaryJSON),i=Object.values(n[e]);return Object.keys(n[e]).map((function(t){return t.split(".").pop()})).reduce((function(t,n,e){return t[n]=i[e],t}),{})}}}]);